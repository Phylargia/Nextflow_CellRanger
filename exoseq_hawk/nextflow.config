manifest {
	name = 'WES-pipeline/cellranger'
 	author = 'Christopher OConnor <kit.ourea@gmail.com>'
	homepage = 'https://github.com/Phylargia/Nextflow_CellRanger'
        description = 'Perform exome sequencing for scRNA-seq with CellRanger'
        mainScript = 'main.nf'
	nextflowVersion = '>=21.04.0'
	version = '0.1.0dev'
}

// Automatically mount input and output directories defined in task processes in a singularity container
singularity.autoMounts = true

// Job tags // 
executor{
    jobName = { "$task.tag" }
}

// Define parameters // 
params {

    // User Settings //
    userID = "c.c1845715"
    userProjectCode = "scw1557"
	
    // Project //
    analysisID = "exoseq_hawk"
    projectID = "Kit"
    dataID = "project_01"   
    dataDir = "/scratch/${userID}/nextflow_cellranger/data.nextflow"
    projectDir = "/scratch/${userID}/nextflow_cellranger/${analysisID}"

    // Copy //
    publish_dir_mode = 'symlink'
	
    // Reference, Transcriptome //
    genome = false
    transcriptome = "${projectDir}/resources/assembly"

    // Retry Flags
    sleepTimeStart = '0m'
    sleepTimeEnd = '0m'
    retries = '1'
	
    // Directories //
    inputDir = "input"
    outputDir = "output"
    resourceDir = "resources"
    releaseDir = "release"
	
    // Modules // 	
    // SRAtoolkit
    sraVersion = "sratoolkit.3.0.5-ubuntu64"
		
    // FastQC
    fastqcVersion = "FastQC/0.11.8"
	
    // MultiQC 
    multiqcVersion = "multiqc/1.10.1"
	
    // CellRanger Count
    cellRangerVersion = "cellranger-7.1.0" 

    // Module Paths
    cellRanger = "PATH=$PATH:/scratch/c.c1845715/${cellRangerVersion}"
    
    // Not Used: sratoolkit = "PATH=$PATH:/scratch/c.c1845715/${sraVersion}"

    // Boilerplate options // 
    help = false
    tracedir = "${params.projectDir}/pipeline_info"
    input = null
    
    // Execution Strategy // 
  execution {
    queue_size = 100
    threads = 1
    max_retries = 5
    error_strategy = "retry"
  }
}

// Capture exit codes 
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
  enabled = true
  file = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
  enabled = true
  file = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
  enabled = true
  file = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
  enabled = true
  file = "${params.tracedir}/pipeline_dag_${trace_timestamp}.svg"
}

// Profiles //
profiles {
    standard {
        process.executor = 'local'
    }

    slurm {
        process.executor = 'slurm'
        process.queue = 'htc'
        process.clusterOptions = "-A ${params.userProjectCode}"
        singularity.enabled = true // Reproducibility, isolation, portability
        //process.time = '72h'
		//process.memory = '20 GB'
        //process.cpus = '4'
    }
}

// Workflow //
process {
         executor = 'slurm'
         queue = 'htc'
         clusterOptions = "-A ${params.userProjectCode}"

	 withName:fastQC { 
		 time='24h'
		 cpus='4'
		 memory='20 GB'
	}
	
         withName:multiQC {
                 time='24h'
                 cpus='4'
                 memory='30 GB'
        }

         withName:cellranger_count {
                 time='48h'
                 cpus='8'
                 memory='40 GB'
        }

         withName:cellranger_aggregate {
                 time='48h'
                 cpus='8'
                 memory='40 GB'
        }

}

// End of Script //
